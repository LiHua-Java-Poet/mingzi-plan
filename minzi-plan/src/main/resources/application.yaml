server:
  port: 8901
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
spring:
  main:
    allow-bean-definition-overriding: true
  shardingsphere:
    datasource:
      names: db0,db1
      db0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://112.74.191.203:3306/tip?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
        username: root
        password: abcd+7523-
      db1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://112.74.191.203:3306/tip_log?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
        username: root
        password: abcd+7523-
    rules:
      sharding:
        tables:
          request_log:  # 配置 request_log 表的路由规则
            actual-data-nodes: db1.request_log # 所有操作都路由到 db1 的 tip_log 表
        default-database-strategy:  # 默认数据库路由规则
          standard:
            sharding-column: id
            sharding-algorithm-name: default-db-algorithm
        sharding-algorithms:
          default-db-algorithm:
            type: INLINE
            props:
              algorithm-expression: db0
    props:
      sql-show: true
  resources:
    static-locations: classpath:/static/
  cors:
    allowed-origins: "*"
    allowed-methods: "*"
    allowed-headers: "*"
  application:
    name: 'plan'
  redis:
    host: 112.74.191.203
    port: 6379
    password: redis123
    database: 0
  rabbitmq:
    host: 112.74.191.203
    port: 5672
    username: lihua
    password: 123456
minio:
  endpoint: http://112.74.191.203:9000
  accesskey: minioadmin
  secretKey: minioadmin




filter.passage: "/app/user/login,/app/user/reg"
window.limit: 100

knife4j:
  enable: true # 启用 Knife4j
  production: false # 是否为生产环境，生产环境建议设置为 true
  setting:
    enableSwaggerModels: true
springfox:
  documentation:
    swagger-ui:
      enabled: true # 启用 Swagger UI

